# Test Authentication Endpoints
# You can use this file with REST Client extension in VS Code

### Register a new user
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "firstName": "John",
  "lastName": "Doe",
  "email": "john@example.com",
  "phone": "+1234567890",
  "password": "password123"
}

### Login with the user
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "email": "john@example.com",
  "password": "password123"
}

### Get user profile (replace YOUR_JWT_TOKEN with actual token from login)
GET http://localhost:3000/users/profile
Authorization: Bearer YOUR_JWT_TOKEN

### Register an admin user
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "firstName": "Admin",
  "lastName": "User",
  "email": "admin@example.com",
  "phone": "+1234567891",
  "password": "admin123",
  "role": "ADMIN"
}

### Login as admin
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "admin123"
}

### Get all users (admin only - replace ADMIN_JWT_TOKEN with admin token)
GET http://localhost:3000/users
Authorization: Bearer ADMIN_JWT_TOKEN

### Approve a user (admin only)
PATCH http://localhost:3000/users/USER_ID/approve
Authorization: Bearer ADMIN_JWT_TOKEN